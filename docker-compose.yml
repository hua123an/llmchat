version: '3.8'

services:
  llmchat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: llmchat-app
    restart: unless-stopped
    ports:
      - "80:80"
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    volumes:
      - llmchat-data:/app/data
      - llmchat-logs:/var/log/llmchat
    networks:
      - llmchat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis缓存服务（可选）
  redis:
    image: redis:7-alpine
    container_name: llmchat-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - llmchat-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-chatllm2024}

  # Nginx代理（用于SSL终止）
  nginx-proxy:
    image: nginx:alpine
    container_name: llmchat-proxy
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./docker/ssl-nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl/certs
    networks:
      - llmchat-network
    depends_on:
      - llmchat
    profiles:
      - ssl

  # 数据库服务（可选）
  postgres:
    image: postgres:15-alpine
    container_name: llmchat-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME:-llmchat}
      - POSTGRES_USER=${DB_USER:-llmchat}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-chatllm2024}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - llmchat-network
    profiles:
      - database

volumes:
  llmchat-data:
    driver: local
  llmchat-logs:
    driver: local
  redis-data:
    driver: local
  postgres-data:
    driver: local

networks:
  llmchat-network:
    driver: bridge
